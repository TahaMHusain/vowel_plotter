b <- c()
b <-  c()
is.vector(b)n
is.vector(b)
is.list(b)
is.array(b)
typeof(b)
b
b <-  c(1)
typeof(b)
b <- c(1:2)
typeof(b)
b
is.vector(b)
is.list(b)
is.array(b)
b[0]
b[1]
b[2]
b[3]
a <- list(1:2)
typeof(a)
a[0]
a[1]
a[2]
a[[1]]
a[[2]]
a[[0]]
F1_mean
rm(a)
rm(b)
rm(a.dr)
rm(a.df)
rm(a.dist)
rm(a.mean)
rm(a.sd)
rm(i)
F1
rm(F1)
data
rm(data)
for (i in seq_along(F1_mean)){
F1_dist[i] <- create_rnorm(F1_mean, 100)
}
for (i in seq_along(F1_mean)){
F1_dist[i] <- create_rnorm(F1_mean[i], 100)
}
mean = 10
sd = 1
rnorm(10, mean = mean, sd = sd)
create_rnorm
F1_mean[1]
F1_mean[[1]]
rnorm(10, mean = F1_mean[1], sd = 100)
rnorm(10, mean = F1_mean[[1]], sd = 100)
for (in in seq_along(F1_mean)) {
F1_dist[i] <- create_rnorm(F1_mean[[i]], 100)
}
for (in in seq_along(F1_mean)) {
F1_dist[i] <- create_rnorm(F1_mean[[i]], 100)
}
for (in in seq_along(F1_mean)) {
F1_dist[[i]] <- create_rnorm(F1_mean[[i]], 100)
}
create_rnorm(F1_mean[[1]], 100)
for (i in seq_along(F1_mean)) {
F1_dist[[i]] <- create_rnorm(F1_mean[[i]], 100)
}
F1_dist
F1_dist[[1]]
F1_dist[[2]]
F1_dist[[3]]
F1_dist[[4]]
F1_dist[[5]]
F1_dist[[6]]
F1_dist[[7]]
length(F1_dist)
typeof(F1_dist)
length(F1_dist[[1]])
length(F1_dist)
F1_mean[:]
F1_mean
F1_mean <- c(800, 600, 350, 600, 350)
F1_mean
create_rnorm(F1_mean, 100)
create_rnorm(500, 100)
a <- c(c(1, 2), c(1, 2), c(1, 2))
a
typeof(a)
typeof(a[[1]])
a[[1]]
a[1]
a[[2]]
a[[3]]
a[[4]]
rnorm(mean = rep(F1_mean, each= 50), sd = 100)
rnorm(1, mean = rep(F1_mean, each= 50), sd = 100)
rnorm(250, mean = F1_mean, sd = 100)
F1_mean
rep(F1_mean, each = 50)
rnorm(50, rep(F1_mean, each = 50), sd = 100)
rnorm(250, rep(F1_mean, each = 50), sd = 100)
rnorm(250, rep(F1_mean, each = 50), sd = 1)
vowel_letters <- c("a", "e", "i", "o", "u")
F1_mean = c(800, 600, 350, 600, 350)
F2_mean = c(1500, 2000, 2500, 1000, 800)
vowels <- tibble(vowel = rep(vowel_letters, each = 50),
F1 = rnorm(250, rep(F1_mean, each = 50), sd = 100),
F2 = rnorm(250, rep(F2_mean, each = 50), sd = 150))
vowels
ggplot(data = vowels, aes(x = F2, y = F1, color = vowel, label = vowel)) + geom_text() + theme_classic()
each = 3
vowels <- tibble(vowel = rep(vowel_letters, each = each),
F1 = rnorm(length(vowel_letters) * each, rep(F1_mean, each = each), sd = 100),
F2 = rnorm(length(vowel_leters) * each, rep(F2_mean, each = each), sd = 150))
vowels <- tibble(vowel = rep(vowel_letters, each = each),
F1 = rnorm(length(vowel_letters) * each, rep(F1_mean, each = each), sd = 100),
F2 = rnorm(length(vowel_letters) * each, rep(F2_mean, each = each), sd = 150))
vowels
ggplot(data = vowels, aes(x = F2, y = F1, color = vowel, label = vowel)) + geom_text() + theme_classic()
ggplot(data = vowels, aes(x = F2, y = F1, color = vowel, label = vowel)) + geom_text() + scale_x_reverse() + scale_y_reverse() + theme(legend.position = "none") + theme_classic()
ggplot(data = vowels, aes(x = F2, y = F1, color = vowel, label = vowel)) + geom_text() + scale_x_reverse(position = "top") + scale_y_reverse(position = "right") + theme(legend.position = "none") + theme_classic()
F2_mean
means = vowels %>% group_by(vowel) %>% n()
vowels %>% group_by(vowel) %>% summarize(meanF1 = n())
vowels %>% group_by(vowel) %>% summarize(meanF1 = mean(F1))
vowels %>% group_by(vowel) %>% summarize(meanF1 = mean(F1), meanF2 = mean(F2), seF1 = sd(F1)/sqrt(n()), seF2 = sd(F2)/sqrt(n()))
means = vowels %>% group_by(vowel) %>% summarize(meanF1 = mean(F1), meanF2 = mean(F2), seF1 = sd(F1)/sqrt(n()), seF2 = sd(F2)/sqrt(n()))
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) + geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(xmin = meanf2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanf2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5, color = vowels) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowels, position = position_nudge(x = 50, y = 50), size = 5, color = vowels) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowel, position = position_nudge(x = 50, y = 50), size = 5, color = vowel) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
means
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowel_letters, position = position_nudge(x = 50, y = 50), size = 5, color = vowel_letters) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = means.vowel, position = position_nudge(x = 50, y = 50), size = 5, color = means.vowel) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
means
means.vowel
means[vowel]
means[[vowel]]
data[vowel,,,,]
data["vowel"]
data[c("vowel")]
data[,c("vowel")]
data[,"vowel"]
means["vowel"]
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = means["vowel"], position = position_nudge(x = 50, y = 50), size = 5, color = means["vowel"]) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = means["vowel"], position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = means["vowel"], position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = means, position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowel_letters, position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
means["vowel"]
vowel_letters
c(means["vowel"])
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = c(means["vowel"]), position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
c(means["vowel"])
vowel_letters
list(means["vowel"])
c(vowel_letters)
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowel_letters, position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
c(vowel_letters)
vowel_letters
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = c(vowel_letters), position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = c(vowel_letters), position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = c(means["vowel"]), position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
vowel_letters <- c(means["vowel"])
ggplot(data = means, aes(x = meanF2, y = meanF1, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(label = vowel_letters, position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, label = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5, color = "black") +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, label = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5, color = means["vowel"]) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
as.color(c(1:5))
install.packages("network")
library(network)
as.color(c(1:5))
palette(1)
palette('a')
palette('abafweaf')
palette('abafwf')
ggplot(data = means, aes(x = meanF2, y = meanF1, label = vowel, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
ggplot(data = vowels, aes(x = F2, y = F1, color = vowel, label = vowel)) +
geom_text() +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
geom_density_2d() +
theme(legend.position = "none") +
theme_classic()
ggplot(data = means, aes(x = meanF2, y = meanF1, label = vowel, color = vowel)) +
geom_errorbar(aes(ymin = meanF1 - seF1, ymax = meanF1 + seF1), width = 0, size = 1) +
geom_errorbarh(aes(xmin = meanF2 - seF2, xmax = meanF2 + seF2), height= 0, size = 1) +
geom_text(position = position_nudge(x = 50, y = 50), size = 5) +
scale_y_reverse(position = "right") +
scale_x_reverse(position = "top") +
theme(legend.position = "none") +
theme_classic()
load("/home/Mark/Downloads/indoVowels.rda")
library(getopt)
a <- "test"
a <- "test.csv"
substr(a, 3)
substr(a, 3, 5)
substr(a, 3, -1)
substr(a, 3, -3)
substrRight(a, 4)
sub(".*(?=.$)", "", string, perl=T)
sub(".*(?=.{4}$)", "", "text.csv", perl=T)
sub("(.*)?=.{4}$", "", "text.csv", perl=T)
sub("(.*)?=.{4}$", "\1", "text.csv", perl=T)
sub("(.*)?=.{4}$", "/1", "text.csv", perl=T)
sub("(.*)?=.{4}$", "/1", "text.csv")
sub("(.*)?=.{4}$", "\1", "text.csv")
sub("(.*)?=.{4}$", "\1", "text.csv", perl=TRUE)
sub(".*?=.{4}$", "\1", "text.csv", perl=TRUE)
sub(".*?=.{4}$", "", "text.csv", perl=TRUE)
sub(".*(?=.{4})$", "", "text.csv", perl=TRUE)
sub(".*(?=.{4})$", "", "text.csv", perl=TRUE)
sub(".*(?=.{4}$)", "", "text.csv", perl=TRUE)
sub("(.*)?=.{4}$", "", "text.csv", perl=TRUE)
sub("(^.*)?=.{4}$", "", "text.csv", perl=TRUE)
sub("(^.*)(?=.{4}$)", "", "text.csv", perl=TRUE)
sub(".*(?=.{4}$)", "", "text.csv", perl=TRUE)
sub(".*(?=.{4}$)", "", "text.csv", perl=TRUE)
sub(".*(!?=.{4}$)", "", "text.csv", perl=TRUE)
sub(".*(?=.{4}$)", "", "text.csv", perl=TRUE)
a
substr(a, nchar(a)-4)
substr(a, 0, nchar(a)-4)
substr(a, 0, nchar(a)-4) + ".svg"
paste(substr(a, 0, nchar(a)  - 4) ".svg")
paste(substr(a, 0, nchar(a)  - 4), ".svg")
paste(substr(a, 0, nchar(a)  - 4), ".svg", sep = "")
paste(substr(a, 1, nchar(a)  - 4), ".svg", sep = "")
install.packages("phonTools")
library(phonTools)
loadsound("i.wav")
gwd()
getwd()
setwd("/home/Mark/R_Projects/vowel_plotter")
loadsound("i.wav")
sound = loadsound("i.wav")
plot(sound)
sound = loadsound("i.wav")
plot(sound)
spectrogram(sound)
findformants(sound, coeffs = 7)
findformants(sound, coeffs = 4)
formants = findformants(sound, coeffs = 7)
formants
formants <- findformants(sound, coeffs = 4)
formants
formants[1]
formants[[1]
]
typeof(formants)
formants <- findformants(sound, coeffs = 4, verify = TRUE)
formants <- findformants(sound, coeffs = 7, verify = TRUE)
plot(sound)
formants <- findformants(sound, coeffs = 7, verify = TRUE)
formants <- findformants(sound, coeffs = 7, verify = TRUE, showbws = TRUE)
formants
coeffs = lpc (sound, 10000, order = 7)
coeffs
roots <- polyroot (rev(coeffs))
angs <- atan2(Im(roots), Re(roots))
angs
formants <- round(angs * (10000 / (2 * pi)), 2)
formants
nums <- order(formants)
nums
formants <- formants[nums]
formants
bws = -(10000 / pi) * log(abs(roots[nums]))
bws
touse <- (bws < maxbw & formants > 200 & formants < 5000)
touse <- (bws < 600 & formants > 200 & formants < 5000)
touse
out <- data.frame(formant = formant[touse], bandwith = bws[touse])
out <- data.frame("formant" = formant[touse], "bandwith" = bws[touse])
data.frame(a = 1, b = 2)
data.frame(formant = formant[touse], bandwith = bws[touse])
formant
data.frame(formant = formants[touse], bandwith = bws[touse])
sound
plot(sound)
sound = readBin("i.wav", "integer", n = subchunk2Size / 2, size = 2, signed = TRUE) / 32768
subchunk2Size = readBin("i.wav", "integer", size = 4)
subchunk2Size
sound = readBin("i.wav", "integer", n = subchunk2Size / 2, size = 2, signed = TRUE) / 32768
close("i.wav")
sound <- ts(sound, frequency = 44100, start = 0)
plot(sound)
sound <- ts(sound, frequency = 44100, start = 100)
plot(sound)
sound <- ts(sound, frequency = 44100, start = 1000)
plot(sound)
sound <- ts(sound, frequency = 44100, start = 0)
plot(sound)
sound
sound[time(sound) > 6]
sound[time(sound) > .000136]
sound[time(sound) > .00001]
sound[time(sound) > .0001]
sound[time(sound) > .000001]
sound[time(sound) > .0002]
sound <- sound[time(sound) > .0002]
plot(sound)
plot(sound)
fs <- 10000
coeffs <- 7
maxbw <- 600
minformant <- 200
coeffs <- lpc(sound, fs = fs, order = coeffs)
roots <- polyroot(rev(coeffs))
angs <- atan2(Im(roots), Re(roots))
formants <- round(angs * (fs / (2 * pi)), 2)
nums <- order(formants)
formants <- formants[nums]
bws <- -(fs / pi) * log(abs(roots[nums]))
touse <- (bws < maxbw & formants > minformant & formants < fs / 2)
touse
formants
bws
out <- data.frame(formant = formants[touse], bandwith = bws[touse])
out
vowels <- data.frame(vowel = "a", F1 = 745.48, F2 = 1776.71)
vowels
subchunk2Size <- readBin("a.wav", "integer", size = 4)
sound <- readBin("a.wav", "integer", n = subchunk2Size / 2, size = 2, signed = TRUE) / 32768
sound <- ts(sound, frequency = 44100, start = 0)
plot(sound)
plot(sound)
subchunk2Size <- readBin("a.wav", "integer", size = 4)
sound <- readBin("a.wav", "integer", n = subchunk2Size / 2, size = 2, signed = TRUE) / 32768
sound <- ts(sound, frequency = 44100, start = 0)
plot(sound)
plot(sound)
coeffs <- 7
coeffs <- lpc(sound, fs = fs, order = coeffs)
roots <- polyroot(rev(coeffs))
angs <- atan2(Im(roots), Re(roots))
formants <- round(angs * (fs / (2 * pi)), 2)
nums <- order(formants)
formnats <- formants[nums]
bws <- -(fs / pi) * log(abs(roots[nums]))
formants
touse
nums
formants <- formants[nums]
formants
touse <- (bws < maxbw & formants > minformant & formants < fs / 2)
formants <- formants[touse]
formants
vowels
sound <- loadsound("a.wav")
sound
